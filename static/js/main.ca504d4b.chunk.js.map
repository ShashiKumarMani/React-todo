{"version":3,"sources":["components/Todo.js","components/Form.js","components/Filter.js","App.js","index.js"],"names":["Todo","id","name","completed","removeTask","toggleTask","className","type","defaultChecked","onChange","style","textDecoration","onClick","Form","props","useState","setName","onSubmit","e","preventDefault","addTask","document","getElementById","value","autoComplete","target","placeholder","Filter","filter","contractAddress","taskData","taskList","active","taskCount","App","tasks","setTasks","a","newTask","push","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","TodoList","abi","createTask","transaction","wait","filterActive","filterCompleted","taskId","otherTasks","task","deleteTask","tx","map","modTasks","activeTasks","completedTasks","useEffect","request","method","parseInt","toString","list","i","readTask","content","console","log","error","connect","taskNumText","length","headingText","ReactDOM","render","StrictMode"],"mappings":"0rkBAqBeA,EApBF,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAG5C,OACE,+BACE,sBAAKC,UAAU,eAAf,UACE,uBAAOL,GAAG,SAASM,KAAK,WAAWC,eAAgBL,EAAWM,SAAU,kBAAMJ,EAAWJ,MACzF,uBAAOS,MAAO,CAACC,eAAiBR,EAAY,eAAiB,QAA7D,SACGD,OAGL,8BACE,wBAAQI,UAAU,aAAaM,QAAS,kBAAMR,EAAWH,IAAKM,KAAK,SAAnE,qBCqBKM,EAhCF,SAACC,GAAW,IAAD,EAEMC,mBAAS,UAFf,mBAEZb,EAFY,KAENc,EAFM,KAepB,OACI,uBAAMV,UAAU,OAAOW,SAZ3B,SAAsBC,GAClBA,EAAEC,iBACFL,EAAMM,QAAQlB,GACdc,EAAQ,IACRK,SAASC,eAAe,YAAYC,MAAQ,IAQ5C,UACA,uBACIhB,KAAK,OACLN,GAAG,WACHC,KAAK,OACLsB,aAAa,MACbf,SAXR,SAAsBS,GAClBF,EAAQE,EAAEO,OAAOF,QAWbG,YAAY,2BAEhB,wBAAQnB,KAAK,SAAb,0BCjBOoB,MARf,SAAgBb,GACd,OACE,wBAAQP,KAAK,SAASK,QAASE,EAAMc,OAArC,SACKd,EAAMZ,Q,gBCGT2B,EAAkB,6CAEpBC,EAAW,GACXC,EAAW,GAEXC,GAAS,EACT7B,GAAY,EACZ8B,EAAY,EAsIDC,MApIf,SAAapB,GAAQ,IAAD,EAEUC,mBAAS,IAFnB,mBAEVoB,EAFU,KAEHC,EAFG,iDAkClB,WAAuBlC,GAAvB,uBAAAmC,EAAA,6DAEQC,EAAU,CAAC,GADjBL,GAAa,EACuB,KAAS/B,EAAM,WAAa,GAChE4B,EAASS,KAAKD,GACdF,EAAS,GAAD,mBAAKD,GAAL,CAAYG,KACdE,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAW,IAAIP,IAAOQ,SAASpB,EAAiBqB,EAASC,IAAKL,GAPtE,SAQ4BE,EAASI,WAAWlD,GARhD,cAQQmD,EARR,iBASQA,EAAYC,OATpB,QAWKtB,GAAQuB,IACRpD,GAAWqD,IAZhB,6CAlCkB,+BAiDHpD,EAjDG,8EAiDlB,WAA0BqD,GAA1B,uBAAApB,EAAA,6DACMqB,EAAavB,EAAMP,QAAO,SAAA+B,GAAI,OAAIA,EAAK1D,KAAOwD,KAClD3B,EAAWA,EAASF,QAAO,SAAA+B,GAAI,OAAIA,EAAK1D,KAAOwD,KAEzCjB,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAW,IAAIP,IAAOQ,SAASpB,EAAiBqB,EAASC,IAAKL,GANtE,SAOmBE,EAASY,WAAWH,GAPvC,cAOQI,EAPR,iBAQQA,EAAGP,OARX,QAUElB,EAASsB,GAVX,6CAjDkB,+BA8DHrD,EA9DG,8EA8DlB,WAA0BoD,GAA1B,uBAAApB,EAAA,6DACEP,EAAYA,EAASgC,KAAI,SAAAH,GACvB,OAAGA,EAAK1D,KAAOwD,EACN,2BAAIE,GAAX,IAAiB,WAAcA,EAAKxD,YAE7BwD,KAGPI,EAAY5B,EAAM2B,KAAI,SAAAH,GACxB,OAAGA,EAAK1D,KAAOwD,EACN,2BAAIE,GAAX,IAAiB,WAAcA,EAAKxD,YAE7BwD,KAILnB,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UACpDC,EAASN,EAASO,YAClBC,EAAW,IAAIP,IAAOQ,SAASpB,EAAiBqB,EAASC,IAAKL,GAlBtE,SAmB4BE,EAAS3C,WAAWoD,GAnBhD,cAmBQJ,EAnBR,iBAoBQA,EAAYC,OApBpB,QAsBElB,EAAS2B,GAEN/B,GAAQuB,IACRpD,GAAWqD,IAzBhB,6CA9DkB,sBAiGlB,SAASD,IACPvB,GAAS,EACT,IAAIgC,EAAclC,EAASF,QAAO,SAAA+B,GAAI,OAAuB,IAAnBA,EAAKxD,aAC/CiC,EAAS4B,GAGX,SAASR,IACPrD,GAAY,EACZ,IAAI8D,EAAiBnC,EAASF,QAAO,SAAA+B,GAAI,OAAuB,IAAnBA,EAAKxD,aAClDiC,EAAS6B,GAtGXC,qBAAU,WAAM,4CAEd,oCAAA7B,EAAA,0DACKO,OAAOC,SADZ,iCAEUD,OAAOC,SAASsB,QAAQ,CAAEC,OAAQ,wBAF5C,cAGU5B,EAAW,IAAIC,IAAOC,UAAUC,aAAaC,OAAOC,UACpDG,EAAW,IAAIP,IAAOQ,SAASpB,EAAiBqB,EAASC,IAAKX,GAJxE,cAOkB6B,SAPlB,SAOkCrB,EAASf,YAP3C,sBAOwDqC,cAAlDrC,GAPN,eASqB,GATrB,iBAUYsC,EAAO,GACHC,EAAI,EAXpB,aAWsBA,GAAKvC,GAX3B,kCAY2Be,EAASyB,SAASD,GAZ7C,QAYcb,EAZd,OAaUY,EAAKhC,KAAK,CAAC,GAAOoB,EAAK1D,GAAI,KAAS0D,EAAKe,QAAS,UAAcf,EAAKxD,YAb/E,QAWsCqE,GAAK,EAX3C,wBAeQ1C,EAAWyC,EACXnC,EAASmC,GAhBjB,QAkBMI,QAAQC,IAAI,aAlBlB,kDAqBMD,QAAQE,MAAR,MArBN,2DAFc,uBAAC,WAAD,wBA2BdC,KACC,IA6EH/C,EAAWI,EAAM2B,KAAI,SAAAH,GAAI,OAAI,cAAC,EAAD,CAAoB1D,GAAI0D,EAAK1D,GAAIC,KAAMyD,EAAKzD,KAAMC,UAAWwD,EAAKxD,UAAWC,WAAYA,EAAYC,WAAYA,GAAtGsD,EAAK1D,OAC7C,IAAM8E,EAA+B,IAAjB5C,EAAM6C,OAAe,QAAU,OAC7CC,EAAW,UAAMnD,EAASkD,OAAf,YAAyBD,EAAzB,cAEjB,OACE,sBAAKzE,UAAU,YAAf,UACE,0CACA,cAAC,EAAD,CAAMc,QApHQ,8CAqHd,6BACGW,IAEmB,IAApBD,EAASkD,OAAe,6BACvBC,IACK,KACR,sBAAK3E,UAAU,SAAf,UACE,cAAC,EAAD,CAAQJ,KAAK,MAAM0B,OAlCzB,WACEI,GAAS,EACT7B,GAAY,EACZwE,QAAQC,IAAI9C,GACZM,EAASN,MA+BL,cAAC,EAAD,CAAQ5B,KAAK,SAAS0B,OAAQ2B,IAC9B,cAAC,EAAD,CAAQrD,KAAK,YAAY0B,OAAQ4B,WCzIzC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/D,SAASC,eAAe,W","file":"static/js/main.ca504d4b.chunk.js","sourcesContent":["\nconst Todo = ({id, name, completed, removeTask, toggleTask}) => {\n  \n\n    return (\n      <li>\n        <div className=\"todo-content\">\n          <input id=\"todo-0\" type=\"checkbox\" defaultChecked={completed} onChange={() => toggleTask(id)} />\n          <label style={{textDecoration : completed ? 'line-through' : 'none'}} >\n            {name}\n          </label>\n        </div>\n        <div>\n          <button className=\"btn-delete\" onClick={() => removeTask(id)} type=\"button\">\n            X \n          </button>\n        </div>\n      </li>\n    );\n  }\n\nexport default Todo; ","import React, { useState } from \"react\";\n\nconst Form = (props) => {\n\n    const [ name, setName ] = useState('kumar!')\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name);\n        setName('');\n        document.getElementById('new-todo').value = ''; \n    }\n        \n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n            type=\"text\"\n            id=\"new-todo\"\n            name=\"text\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n            placeholder=\"What needs to be done?\"\n        />\n        <button type=\"submit\">\n            Add Task\n        </button>\n        </form>\n    );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction Filter(props) {\n  return (\n    <button type=\"button\" onClick={props.filter}>\n        {props.name} \n    </button>\n  );\n}\n\nexport default Filter;","import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport './App.css';\nimport TodoList from './artifacts/contracts/TodoList.sol/TodoList.json';\n\nconst contractAddress = '0x60C2C4356F962eA400872456d13743c456577DFC';\n\nlet taskData = [];\nlet taskList = [];\n\nlet active = false;\nlet completed = false;\nlet taskCount = 0;\n\nfunction App(props) {\n\n  const [ tasks, setTasks ] = useState([]);\n\n  useEffect(() => {\n    \n    async function connect() {\n      if(window.ethereum) {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(contractAddress, TodoList.abi, provider);\n        \n        try {\n          taskCount = parseInt((await contract.taskCount()).toString());\n          \n          if(taskCount > 0) {\n            let list = [];\n            for(let i = 1;i <= taskCount; i += 1) {\n              let task = await contract.readTask(i);\n              list.push({'id' : task.id, 'name' : task.content, 'completed' : task.completed});\n            }\n            taskData = list;\n            setTasks(list);\n          }\n          console.log('useEffect');\n        \n        } catch(error) {\n          console.error(error);\n        }\n      }\n    }\n    connect(); \n  }, [])  \n \n  async function addTask(name) {\n    taskCount += 1;\n    const newTask = {'id' : taskCount,  'name' : name, 'completed': false};\n    taskData.push(newTask);\n    setTasks([...tasks, newTask]);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const contract = new ethers.Contract(contractAddress, TodoList.abi, signer)\n    const transaction = await contract.createTask(name);\n    await transaction.wait();\n\n    if(active) filterActive();\n    if(completed) filterCompleted();\n  }\n\n  async function removeTask(taskId) {\n    let otherTasks = tasks.filter(task => task.id !== taskId);\n    taskData = taskData.filter(task => task.id !== taskId);\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, TodoList.abi, signer)\n    const tx = await contract.deleteTask(taskId);\n    await tx.wait();\n\n    setTasks(otherTasks);\n  }\n\n  async function toggleTask(taskId) {\n    taskData  = taskData.map(task => {\n      if(task.id === taskId) {\n        return {...task, 'completed': !task.completed};\n      } else {\n        return task;\n      }\n    });\n    let modTasks  = tasks.map(task => {\n      if(task.id === taskId) {\n        return {...task, 'completed': !task.completed};\n      } else {\n        return task;\n      }\n    });\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner()\n    const contract = new ethers.Contract(contractAddress, TodoList.abi, signer)\n    const transaction = await contract.toggleTask(taskId);\n    await transaction.wait();\n\n    setTasks(modTasks);\n\n    if(active) filterActive();\n    if(completed) filterCompleted();\n  }\n\n  function filterAll() {\n    active = false;\n    completed = false;\n    console.log(taskData);\n    setTasks(taskData);\n  }\n\n  function filterActive() {\n    active = true;\n    let activeTasks = taskData.filter(task => task.completed === false);\n    setTasks(activeTasks);\n  }\n\n  function filterCompleted() {\n    completed = true;\n    let completedTasks = taskData.filter(task => task.completed === true);\n    setTasks(completedTasks);\n  }\n\n  taskList = tasks.map(task => <Todo key={task.id} id={task.id} name={task.name} completed={task.completed} removeTask={removeTask} toggleTask={toggleTask}/>);    \n  const taskNumText = tasks.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskData.length} ${taskNumText} remaining`; \n\n  return (\n    <div className=\"container\">\n      <h1>TodoList</h1>\n      <Form addTask={addTask}/>\n      <ul>\n        {taskList}\n      </ul>\n      { taskData.length !== 0 ? <h2>\n        {headingText}\n      </h2> : null }\n      <div className=\"filter\">\n        <Filter name=\"All\" filter={filterAll}/>\n        <Filter name=\"Active\" filter={filterActive}/>\n        <Filter name=\"Completed\" filter={filterCompleted}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}